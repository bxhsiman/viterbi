//==============================================================================
// 文件名: dff.v
// 描述: 参数化D触发器模块 (Parameterized D Flip-Flop)
//
// 模块功能和原理:
// 1. pDFF是一个通用的参数化D触发器模块
// 2. 支持可配置的数据位宽，默认为1位
// 3. 具有异步低电平复位功能
// 4. 在时钟上升沿锁存输入数据
//
// 主要特性:
// - 参数化设计: 通过WIDTH参数可配置数据位宽
// - 异步复位: 低电平有效的异步复位信号
// - 同步数据传输: 在时钟上升沿更新输出
// - 复位优先: 复位信号优先级高于时钟信号
//
// 使用场景:
// - 流水线寄存器: 在流水线设计中作为级间寄存器
// - 状态寄存器: 存储模块的状态信息
// - 数据缓存: 临时存储数据，提供时序隔离
// - 信号同步: 将异步信号同步到时钟域
//
// 时序特性:
// - 建立时间: 数据必须在时钟上升沿前稳定
// - 保持时间: 数据必须在时钟上升沿后保持稳定
// - 复位恢复时间: 复位释放后需要稳定时间才能正常工作
//==============================================================================

//==============================================================================
// 模块名: pDFF
// 功能: 参数化D触发器，支持可配置位宽的数据锁存
// 参数:
//   - WIDTH: 数据位宽，默认为1位
// 输入:
//   - DATA: 输入数据，位宽由WIDTH参数决定
//   - CLOCK: 时钟信号，上升沿有效
//   - RESET: 复位信号，低电平有效，异步复位
// 输出:
//   - QOUT: 输出数据，位宽与输入DATA相同
//==============================================================================
module pDFF(DATA,QOUT,CLOCK,RESET);

// 参数定义
parameter WIDTH = 1;                      // 数据位宽参数，默认1位

// 端口定义
input [WIDTH-1:0] DATA;                   // 输入数据总线
input CLOCK, RESET;                       // 时钟和复位信号

output [WIDTH-1:0] QOUT;                  // 输出数据总线
reg [WIDTH-1:0] QOUT;                     // 输出寄存器

   // D触发器主逻辑
   // 异步复位，同步数据传输
   always @(posedge CLOCK or negedge RESET)
      if (~RESET) 
         QOUT <= 0;                       // 异步低电平复位，输出清零
      else 
         QOUT <= DATA;                    // 时钟上升沿锁存输入数据

endmodule